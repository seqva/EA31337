environment:
  EAFILE: src/EA31337.mq4
  matrix:
  - MODE: __lite__
  - MODE: __advanced__
  - MODE: __rider__
  - MODE: __backtest__
  - MODE: __optimize__
  - MODE: __profiler__
  - MODE: __limited__
  - MODE: __release__
  - MODE: __debug__
  - MODE: __trace__
  - MODE: __experimental__
init:
- ps: iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
install:
- appveyor DownloadFile https://github.com/EA31337/MetaEditor/raw/master/metaeditor.exe
- scoop install ruby python
- ps: scoop install shellcheck
before_test:
- git submodule update --init
- shellcheck --version
- ruby --version
- echo ^#define %MODE% >> src/include/EA31337/ea-mode.mqh
test_script:
- ps: shellcheck scripts/*.sh
- ps: Copy-Item "$env:EAFILE" -Destination "$env:EAFILE.mq5"
- metaeditor /s /compile:%EAFILE% /log:mql4.log || exit /b 0
- metaeditor /s /compile:%EAFILE%.mq5 /log:mql5.log || exit /b 0
- type mql4.log mql5.log
- ruby -e "if File.open('mql4.log', mode:'rb:BOM|UTF-16LE').readlines.grep(Regexp.new '[1-9] error'.encode(Encoding::UTF_16LE)) {exit 1}; end"
- ruby -e "if File.open('mql4.log', mode:'rb:BOM|UTF-16LE').readlines.grep(Regexp.new '[1-9] warning'.encode(Encoding::UTF_16LE)) {exit 1}; end"
- ruby -e "if File.open('mql4.log', mode:'rb:BOM|UTF-16LE').readlines.grep(Regexp.new '[1-9][0-9] error'.encode(Encoding::UTF_16LE)) {exit 1}; end"
- ruby -e "if File.open('mql4.log', mode:'rb:BOM|UTF-16LE').readlines.grep(Regexp.new '[1-9][0-9] warning'.encode(Encoding::UTF_16LE)) {exit 1}; end"
- ruby -e "if File.open('mql5.log', mode:'rb:BOM|UTF-16LE').readlines.grep(Regexp.new '[1-9] error'.encode(Encoding::UTF_16LE)) {exit 1}; end"
- ruby -e "if File.open('mql5.log', mode:'rb:BOM|UTF-16LE').readlines.grep(Regexp.new '[1-9] warning'.encode(Encoding::UTF_16LE)) {exit 1}; end"
- ruby -e "if File.open('mql5.log', mode:'rb:BOM|UTF-16LE').readlines.grep(Regexp.new '[1-9][0-9] error'.encode(Encoding::UTF_16LE)) {exit 1}; end"
- ruby -e "if File.open('mql5.log', mode:'rb:BOM|UTF-16LE').readlines.grep(Regexp.new '[1-9][0-9] warning'.encode(Encoding::UTF_16LE)) {exit 1}; end"
build: off
platform: x86
